{"version":3,"sources":["pages/About.js","SongList.js","Audioplayer.js","Navbar.js","pages/Beats.js","pages/Songs.js","MainSec.js","Footer.js","LandingPage.js","App.js","index.js"],"names":["About","className","SongList","title","artist","img_src","src","mood","time","AudioPlayer","props","min","max","useState","currentSongIndex","setCurrentSongIndex","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","audioPlayer","useRef","progressBar","animationRef","length","Math","ceil","floor","random","useEffect","seconds","current","loadedmetadata","readyState","calculateTime","secs","minutes","returnedMinutes","returnedSeconds","pause","play","whilePlaying","value","changePlayerCurrentTime","requestAnimationFrame","style","setProperty","SkipSong","forwards","temp","currentURL","window","location","href","console","log","includes","rel","ref","preload","onClickCapture","backSong","prevValue","cancelAnimationFrame","type","defaultValue","onChange","isNaN","Navbar","click","setClick","setButton","handleClick","showButton","innerWidth","addEventListener","onClick","to","Beats","togglePlayPause","class","marginLeft","id","map","index","cursor","Number","clickIndexChanger","skipSong","Songs","MainSec","Footer","target","freeCodeCamp","alt","LandingPage","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7e06fb0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import AudioPlayer from '../Audioplayer'\r\n// import '../Audioplayer.css';\r\n\r\nimport './About.css'\r\n\r\n\r\n\r\n\r\nexport default function About() {    \r\n\r\n\r\n    return(\r\n    // <nav> \r\n    //     <h1 className = 'beatpage'></h1>\r\n    //     {/* <a href='http://localhost:3000/' className= 'whitetlname2' >\r\n    //         MAA Beats  \r\n    //     </a> */}\r\n\r\n    //     <h1/>\r\n        \r\n\r\n    <div className = \"box\">\r\n    \r\n    <div className = \"starterText\" >\r\n      New & Improved! \r\n    </div>\r\n\r\n    <div className = \"starterText2\">\r\n        Dm comments/inquiries\r\n    </div>\r\n\r\n    <div className = \"starterText3\">\r\n    Enjoy\r\n    </div>\r\n\r\n    <div className = \"starterText4\">\r\n    </div>\r\n\r\n    </div> \r\n    \r\n   \r\n\r\n\r\n    );\r\n    \r\n}\r\n","export const SongList = [\n    {\n        title: \"The Funk\",\n        artist: \"Toni\",\n        img_src: \"../images/fire.jpg\",\n        src: \"../beats/the funk prod.mp3\",\n        mood: \"Relaxed\",\n        time: \"2:12\"\n    },\n    {\n    title: \"Rolex no Patek\",\n    artist: \"Toni\",\n    img_src: \"../images/rolex no patek.jpeg\",\n    src: \"../beats/Rolex no Patek.mp3\",\n    mood: \"Accomplished\",\n    time: \"2:38\"\n    }        ,\n    {\n    title: \"Table for Humina\",\n    artist: \"Toni\",\n    img_src: \"../images/humina.jpg\",\n    src: \"../beats/tableforhumina prod.mp3\",\n    mood: \"Rebellious\",\n    time: \"4:02\"\n    }        ,\n    {\n    title: \"Orbit\",\n    artist: \"Toni\",\n    img_src: \"../images/orbit.jpg\",\n    src: \"../beats/orbitprod.mp3\",\n    mood: \"Inspiring\",\n    time: \"2:55\"\n    },\n    {\n        title: \"42 Dugg\",\n        artist: \"Toni\",\n        img_src: \"../images/piano.jfif\",\n        src: \"../beats/dugg.mp3\",\n        mood: \"Eccentric\",\n        time: \"3:58\"\n        },\n    {\n    title: \"Trapavelli\",\n    artist: \"Toni\",\n    img_src: \"../images/ig88.jfif\",\n    src: \"../beats/trapavelliprod1.mp3\",\n    mood: \"Enraged\",\n    time: \"2:24\"\n    },\n    {\n    title: \"Let it Go\",\n    artist: \"Toni\",\n    img_src: \"../images/purplebeach.jpg\",\n    src: \"../beats/let it go prod.mp3\",\n    mood: \"Intense\",\n    time: \"2:33\"\n    },\n    {\n        title: \"Mimosa\",  \n        artist: \"Toni\",\n        img_src: \"../images/mimosa.jfif\",\n        src: \"../beats/hornsprod.mp3\",\n        mood: \"Calm\",\n        time: \"2:08\"\n          //index loaded into site initially\n      },\n    {\n    title: \"Delta Ave\",\n    artist: \"Toni\",\n    img_src: \"../images/hoh.jpg\",\n    src: \"../beats/delta ave prod.mp3\",\n    mood: \"Crunk\",\n    time: \"2:30\"\n    },\n    {\n    title: \"Riding out\",\n    artist: \"Toni\",\n    img_src: \"../images/kfc.jfif\",\n    src: \"../beats/Riding out.mp3\",\n    mood: \"Inspiring\",\n    time: \"3:07\"\n    },\n    {\n    title: \"Get it\",\n    artist: \"Toni\",\n    img_src: \"../images/get.jpg\",\n    src: \"../beats/Get.mp3\",\n    mood: \"Inspiring\",\n    time: \"3:06\"\n    },\n    {\n    title: \"Void\",\n    artist: \"Toni\",\n    img_src: \"../images/void.jpeg\",\n    src: \"../beats/void prod.mp3\",\n    mood: \"Gloomy\",\n    time: \"3:05\"\n    }        ,\n    {\n    title: \"Reagan Era\",\n    artist: \"Toni\",\n    img_src: \"../images/ronaldreagan.jpeg\",\n    src: \"../beats/ronald reagan prod.mp3\",\n    mood: \"Sad\",\n    time: \"4:02\"\n    }        ,\n    {\n    title: \"You Ain't Ever\",\n    artist: \"Toni\",\n    img_src: \"../images/youaintever.jpeg\",\n    src: \"../beats/you ain't ever prod.mp3\",\n    mood: \"Energetic\",\n    time: \"3:27\"\n    }        ,\n\n    {\n    title: \"Bopper\",\n    artist: \"Toni\",\n    img_src: \"../images/boppers.jpeg\",\n    src: \"../beats/Bopper a minor.mp3\",\n    mood: \"Epic\",\n    time: \"1:53\"\n    }        ,\n\n    {\n    title: \"Daydream\",\n    artist: \"Toni\",\n    img_src: \"../images/daydreamer.jpeg\",\n    src: \"../beats/Daydream prod.mp3\",\n    mood: \"Relaxed\",\n    time: \"3:41\"\n    }        ,\n    {\n    title: \"Golden Corral\",\n    artist: \"Toni\",\n    img_src: \"../images/corral.jpeg\",\n    src: \"../beats/Corral Prod.mp3\",\n    mood: \"Confident\",\n    time: \"2:54\"\n    }        ,\n    {\n    title: \"Red's Dub\",\n    artist: \"Toni\",\n    img_src: \"../images/red dub.gif\",\n    src: \"../beats/red dub.mp3\",\n    mood: \"Happy\",\n    time: \"4:24\"\n    }        ,\n    {\n    title: \"Swim\",\n    artist: \"Toni\",\n    img_src: \"../images/swim.jpeg\",\n    src: \"../beats/Swim Prod.mp3\",\n    mood: \"Lonely\",\n    time: \"3:10\"\n    }        ,\n    {\n    title: \"Scamalot\",\n    artist: \"Toni\",\n    img_src: \"../images/scamalot.jpeg\",\n    src: \"../beats/scamalot prod.mp3\",\n    mood: \"Crazy\",\n    time: \"2:58\"\n    }        ,\n    {\n    title: \"Diamonds Dancing\",\n    artist: \"Toni\",\n    img_src: \"../images/diamondsdancing.jpeg\",\n    src: \"../beats/Diamonds Dancing (work in  progress).mp3\",\n    mood: \"Dark\",\n    time: \"2:32\"\n    },\n    {\n        title: \"24karat\",\n        artist: \"Toni\",\n        img_src: \"../images/24karat.jpeg\",\n        src: \"../beats/24karat prod.mp3\",\n        mood: \"Hyper\",\n        time: \"2:31\"\n        }        \n]\n\nexport default {\n        SongList,\n}\n\n","import React, {useState, useRef, useEffect, useMemo} from 'react'\r\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\r\n\r\nimport './Audioplayer.css';\r\nimport {IoMdSkipBackward} from 'react-icons/io'\r\nimport {IoMdSkipForward} from 'react-icons/io'\r\nimport {GrPlayFill} from 'react-icons/gr'\r\nimport {GrPauseFill} from 'react-icons/gr'\r\nimport {SongList} from './SongList'\r\n\r\n//includes audioplayer functionality and all songs that are necessary to load\r\n\r\n\r\nexport function AudioPlayer(props) {\r\n\r\n    //states\r\n    const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [duration, setDuration] = useState(0);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    //references\r\n    const audioPlayer = useRef(); //reference our audio component\r\n    const progressBar = useRef(); //reference to our slider\r\n    const animationRef = useRef(); //references animation of slider\r\n    \r\n      function getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        let result = Math.floor(Math.random() * (max - min + 1) + min); //The maximum and min are inclusive\r\n        return result\r\n      }\r\n    let randint = getRandomInt(0,SongList.length-1);\r\n  \r\n    \r\n    useEffect(() => { //takes a function as its first parameter, array as second parameter function is what we want it to do\r\n        const seconds = Math.floor(audioPlayer.current.duration);\r\n        setDuration (seconds); //coming from variable set 1 line above ^\r\n        \r\n        progressBar.current.max = seconds;\r\n        \r\n          //current is referencing current item in our reference, max is a built in property on our input range\r\n    }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState, currentTime,isPlaying]); //array tells us when it wants us to run use effect if we dont use this \r\n    //it will run every single time component refreshes, empty array only runs once.  seems like once, but problem is audio file may have not loaded\r\n    //audioplayer exists, current exists updated when loadedmetadata is available, do same with readystate tells us when its loaded as well \r\n\r\n    const calculateTime = (secs) => {\r\n        const minutes = Math.floor(secs / 60);\r\n        const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n        const seconds = Math.floor(secs % 60);\r\n        const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n        return `${returnedMinutes}:${returnedSeconds}`;\r\n      }\r\n\r\n    // const maxTime = (end) => {\r\n    //     const playTime = end;\r\n    //     return (playTime);\r\n    // }  \r\n    // const endSlider = (duration) => {\r\n    //     if(duration === Number(audioPlayer.current.currentTime)) {\r\n    //         return SkipSong;\r\n    //     }\r\n    //     else {\r\n    //         return (false);\r\n    //     }\r\n    // }\r\n\r\n    //not sure if necessary, firefox/Ios workaround attempt\r\n    const catchError = () => { \r\n        var playPromise = document.querySelector('audio').play();\r\n        var loadPromise = document.querySelector('audio').load();\r\n        if (playPromise!== undefined) {\r\n            playPromise.then(_ => {\r\n                playPromise();\r\n            })\r\n            .catch(error => {\r\n               loadPromise(); \r\n            });\r\n        }\r\n    }\r\n//These lines are key to fixing the not playing problem after duration\r\n//and also the skip song working properly make sure to study\r\n\r\n//These Lines below were commented out and FIXED the problem \r\n//seem to work ok in current state but need to watch\r\n\r\n    useEffect(() => {\r\n        if(currentSongIndex === 1 && currentTime === 0){\r\n            //catchError(); \r\n            audioPlayer.current.pause();\r\n            //togglePlayPause();\r\n            \r\n        }\r\n        else { \r\n            audioPlayer.current.play();\r\n            //catchError(); \r\n            //audioPlayer.current.pause();\r\n        }\r\n        }, [currentSongIndex]);\r\n        \r\n\r\n    const togglePlayPause = () => {\r\n        const prevValue = isPlaying; //grabs state outside so that play button doesn't break from useffect being asyncronous\r\n        setIsPlaying(!prevValue);\r\n\r\n        if (!prevValue) {\r\n            audioPlayer.current.play();\r\n            animationRef.current = requestAnimationFrame(whilePlaying)\r\n        }\r\n        else {\r\n            audioPlayer.current.pause(); \r\n            cancelAnimationFrame(animationRef.current);\r\n        }   \r\n}\r\n\r\nconst whilePlaying = () => { //these two functions could be abstracted but first line different\r\n    progressBar.current.value = audioPlayer.current.currentTime;\r\n    changePlayerCurrentTime();\r\n    animationRef.current = requestAnimationFrame(whilePlaying);\r\n}\r\n\r\nconst changeRange = () => {\r\n    audioPlayer.current.currentTime = progressBar.current.value;\r\n    changePlayerCurrentTime();\r\n}\r\n\r\nconst changePlayerCurrentTime = () => {\r\n    progressBar.current.style.setProperty('--seek-before-width', `${progressBar.current.value / duration * 100}%`)\r\n    setCurrentTime(progressBar.current.value);\r\n}\r\n\r\n//Insert songs and set them up for skipping function:\r\n\r\nconst SkipSong = (forwards = true) => {\r\n    if (forwards) {\r\n        setCurrentSongIndex(() => {\r\n            let temp = currentSongIndex\r\n            temp++;\r\n\r\n            if (temp > SongList.length - 1) {\r\n                temp = 0;\r\n            }\r\n            return temp;\r\n        });\r\n    } else {\r\n        setCurrentSongIndex(() => {\r\n            let temp = currentSongIndex;\r\n            temp--;\r\n\r\n            if (temp < 0) {\r\n                temp = SongList.length - 1;\r\n            }\r\n\r\n            return temp;\r\n        });\r\n    }\r\n}\r\n\r\nconst backSong = (backwards = true) => {\r\n    if (backwards) {\r\n        setCurrentSongIndex(() => {\r\n            let temp = currentSongIndex\r\n            temp--;\r\n\r\n            if (temp < 0) {\r\n                temp = SongList.length-1;\r\n            }\r\n            return temp;\r\n        });\r\n    } else {\r\n        setCurrentSongIndex(() => {\r\n            let temp = currentSongIndex;\r\n            temp++;\r\n\r\n            if (temp < 0) {\r\n                temp = SongList.length - 1;\r\n            }\r\n\r\n            return temp;\r\n        });\r\n    }\r\n}\r\n\r\nlet currentURL = window.location.href;\r\n\r\nfunction URLChecker() {\r\n    if (currentURL.includes('/beats')) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nuseEffect(() => { //function checks everytime we want to see if we want to go to the next song, or navigated pages to un-render audioplayer\r\n    if ( calculateTime(currentTime) === calculateTime(duration)) {\r\n        SkipSong(true);  \r\n    } else {\r\n        console.log(\"else loop\")\r\n        if ( URLChecker() ){\r\n            audioPlayer.current.pause();\r\n        }\r\n    }\r\n   //current is referencing current item in our reference, max is a built in property on our input range\r\n}, [currentTime]);\r\n    \r\n\r\n    return (\r\n        //working below this line\r\n        \r\n        <div className = \"Audioplayer\">\r\n            <Link href = 'https://cdn.rawgit.com/mfd/f3d96ec7f0e8f034cc22ea73b3797b59/raw/856f1dbb8d807aabceb80b6d4f94b464df461b3e/gotham.css' rel = \"sytlesheet\" />\r\n            \r\n            <audio src = {SongList[currentSongIndex].src} ref = {audioPlayer} preload = \"metadata\" >\r\n            </audio>\r\n\r\n            <div className =\"songPhotoContainer\">\r\n            <img className =\"songPhoto\" src = {SongList[currentSongIndex].img_src} >\r\n            </img>  \r\n            </div> \r\n\r\n            <div className = \"currentlyPlaying\" >\r\n            Now Playing: \r\n            <br />\r\n            {SongList[currentSongIndex].title}\r\n            {/* {songs[currentSongIndex].title} */} \r\n            {/* Not necessary line above, but keeping around in case SongList method breaks and need to keep songs local to audioplayer */}\r\n            </div>\r\n\r\n            <button className = \"forwardbackward\" onClickCapture = {()=> { backSong(); setIsPlaying(true); }} > \r\n            <IoMdSkipBackward/>  \r\n            \r\n            </button>\r\n            \r\n            <button onClickCapture ={togglePlayPause} className = \"playpause\"  > \r\n            { isPlaying?  <GrPauseFill className = \"pause\" /> : <GrPlayFill className = \"play\" /> } \r\n            \r\n            </button>\r\n\r\n            <button className = \"forwardbackward\" onClickCapture = {()=> { SkipSong(); setIsPlaying(true) }}  > \r\n                <IoMdSkipForward/>\r\n            </button> \r\n            \r\n            <input type = \"range\" className = \"progressbar\" defaultValue = \"0\" ref = {progressBar} onChange = {changeRange} />\r\n\r\n            <div className = \"currenttime\" > \r\n            {calculateTime(currentTime)} \r\n            </div>\r\n\r\n            <div className = \"duration\" > \r\n            {(duration && !isNaN(duration)) && calculateTime(duration)}\r\n            \r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AudioPlayer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nimport { GiLion } from \"react-icons/gi\";\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\nimport { GoX } from 'react-icons/go';\r\n\r\n\r\n\r\nfunction Navbar() {\r\n  \r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n    \r\n   \r\n    const showButton = () => {\r\n      if (window.innerWidth <= 960) {\r\n        setButton(false);\r\n      } else {\r\n        setButton(true);\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      showButton();\r\n    }, []);\r\n  \r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n           <nav className='navbar'> \r\n                \r\n                        {/* <a href='http://localhost:3000/' className= {click ? 'whitetlname' : 'tlname'} >\r\n                         MAA Beats  \r\n                        </a> */}\r\n                        <a href='/' className= 'logopic' >\r\n                            \"<GiLion/> Logo\"\r\n                        </a>\r\n\r\n                        <a href='/' className= {click ? 'whitetlname' : 'tlname'} >\r\n                         \"Producer Name Here\"  \r\n                          </a>\r\n                        <a  className ={click ? 'BurgerChange' : 'BurgerMenu'} onClick={handleClick} >\r\n                            { click ? <GoX/> : <GiHamburgerMenu/> }\r\n                        </a>  \r\n\r\n                        {/* <a className ={click ? 'BurgerChange' : 'BurgerMenu'} onClick={handleClick} >\r\n                             { click ? <GoX/> : <GiHamburgerMenu/> }\r\n                        </a> */}\r\n                          {/* <a className='menu-icon' onClick={handleClick}>\r\n                          <i className={click ? 'BurgerMenu' : 'BurgerChange' } />\r\n                          </a> */}\r\n                        {/* <div className = 'hamburger' onClick={handleClick}>\r\n                            <i className = {click ? 'fas fa-times' : 'fas fa-bars'} \r\n                            />\r\n                        </div> */}\r\n                  \r\n            </nav> \r\n            <div>\r\n            <h1 className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                      <Link href = \"www.google.com\" > \r\n                          \r\n                          <Link to = \"/about\">\r\n                          <a className={click ? 'Beats' : 'Not-Beats' } onClick={handleClick} >\r\n                              About \r\n                          </a>\r\n                          </Link>\r\n\r\n                          <Link to = \"/beats\">\r\n                          <a className={click ? 'Beatpage' : 'Not-Beatpage' } onClick={handleClick} >\r\n                              Beats \r\n                          </a>\r\n                          </Link>\r\n\r\n                          <Link to = \"/songs\">\r\n                          <a className={click ? 'Songs' : 'Not-Songs' } onClick={handleClick} >\r\n                              Songs/\r\n                              <br/>Collab \r\n                          </a>\r\n                          </Link>\r\n\r\n\r\n                            {/* <a href = 'http://localhost:3000/pricing' className={click ? 'Pricing' : 'Not-Pricing' } onClick={handleClick}>\r\n                              Pricing  \r\n                            </a> */}\r\n\r\n                          </Link>  \r\n                        </h1>\r\n            </div>\r\n        </>\r\n      );\r\n\r\n   \r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect,useRef } from 'react';\nimport {SongList} from '../SongList'\nimport {AudioPlayer} from '../Audioplayer'\nimport '../Audioplayer.css';\nimport Navbar from '../Navbar';\n\nimport {IoMdSkipBackward} from 'react-icons/io'\nimport {IoMdSkipForward} from 'react-icons/io'\nimport {GrPlayFill} from 'react-icons/gr'\nimport {GrPauseFill} from 'react-icons/gr'\n\n\nimport './Beats.css'\n\nexport function Beats() {    \n\n    const audioPlayer = useRef();\n    const progressBar = useRef();\n    const animationRef = useRef();\n\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [duration, setDuration] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [currentSongIndex, setCurrentSongIndex] = useState(0);\n\n    const togglePlayPause = () => {\n        const prevValue = isPlaying; //grabs state outside so that play button doesn't break from useffect being asyncronous\n        setIsPlaying(!prevValue);\n\n        if (!prevValue) {\n            audioPlayer.current.play();\n            animationRef.current = requestAnimationFrame(whilePlaying)\n        }\n        else {\n            audioPlayer.current.pause(); \n            cancelAnimationFrame(animationRef.current);\n        }   \n    }\n\n    useEffect(() => { //takes a function as its first parameter, array as second parameter function is what we want it to do\n        const seconds = Math.floor(audioPlayer.current.duration);\n        setDuration (seconds); //coming from variable set 1 line above ^\n        \n        progressBar.current.max = seconds;\n        \n          //current is referencing current item in our reference, max is a built in property on our input range\n    }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState, currentTime,isPlaying]);\n\n    useEffect(() => {\n        if(currentSongIndex === 0 && currentTime === 0){\n            // audioPlayer.current.play();\n             setIsPlaying(false);\n        }\n        else { \n            audioPlayer.current.play();\n            setIsPlaying(true);\n        }\n        }, [currentSongIndex]);\n\n        const whilePlaying = () => { //these two functions could be abstracted but first line different\n            progressBar.current.value = audioPlayer.current.currentTime;\n            changePlayerCurrentTime();\n            animationRef.current = requestAnimationFrame(whilePlaying);\n        }\n\n    const changeRange = () => {\n        audioPlayer.current.currentTime = progressBar.current.value;\n        changePlayerCurrentTime();\n    }\n\n    const changePlayerCurrentTime = () => {\n        progressBar.current.style.setProperty('--seek-before-width', `${progressBar.current.value / duration * 100}%`)\n        setCurrentTime(progressBar.current.value);\n    }\n\n\n    const clickIndexChanger = (index) => {   \n        setCurrentSongIndex(() => {\n                let temp = Number(index)\n                return temp;\n            });\n            togglePlayPause();\n    }\n    const backSong = (backwards = true) => {\n        if (backwards) {\n            setCurrentSongIndex(() => {\n                let temp = currentSongIndex\n                temp--;\n    \n                if (temp < 0) {\n                    temp = SongList.length-1;\n                }\n                return temp;\n            });\n        } else {\n            setCurrentSongIndex(() => {\n                let temp = currentSongIndex;\n                temp++;\n    \n                if (temp < 0) {\n                    temp = SongList.length - 1;\n                }\n    \n                return temp;\n            });\n        }\n    }\n    const skipSong = (forwards = true) => {\n        if (forwards) {\n            setCurrentSongIndex(() => {\n                let temp = currentSongIndex\n                temp++;\n    \n                if (temp > SongList.length - 1) {\n                    temp = 0;\n                }\n                return temp;\n            });\n        } else {\n            setCurrentSongIndex(() => {\n                let temp = currentSongIndex;\n                temp--;\n    \n                if (temp < 0) {\n                    temp = SongList.length - 1;\n                }\n    \n                return temp;\n            });\n        }\n    }\n\n    const calculateTime = (secs) => {\n        const minutes = Math.floor(secs / 60);\n        const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n        const seconds = Math.floor(secs % 60);\n        const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n        return `${returnedMinutes}:${returnedSeconds}`;\n      }\n    function URLChecker() {\n        return false;\n    }\n    useEffect(() => { //function checks everytime we want to see if we want to go to the next song, or navigated pages to un-render audioplayer\n        if ( calculateTime(currentTime) === calculateTime(duration)) {\n            // skipSong(true);  \n        } \n        else {\n            if ( URLChecker() ){\n                audioPlayer.current.pause();\n            }\n        }\n       //current is referencing current item in our reference, max is a built in property on our input range\n    }, [currentTime]);\n\n\n    return(\n            <div className = 'beatsMenu'>\n                <ul class=\"playlist\">\n                    <li className = \"layoutTitles\"> \n                        <p1 class = \"titleInformation\" style = {{marginLeft: \"0px\"}}> Title </p1>\n                        <p1 class = \"titleInformation\" id = 'iphoneHider'> Time </p1>\n                        <p1 class = \"titleInformation\" id = 'iphoneHider'> BPM </p1>\n                        <p1 class = \"titleInformation\" id = 'iphoneHider'> Mood </p1>\n                        <p1 class = \"titleInformation\" id = 'iphoneHider'> Artist </p1>\n                    </li>\n                    \n                    {SongList.map((SongList, index) => (\n                    <li className = \"layoutRow\"> \n                        {/* onClick = \"function(); function()\" */}\n                        <img className = \"rowItems_img\" src = {SongList.img_src} onClick = {togglePlayPause} />\n                        <div className = \"rowItems\" style = {{cursor: \"pointer\"}} onClick = {() => {clickIndexChanger(index)}}> {SongList.title} </div>\n                        <div className = \"rowItems\" id = 'iphoneHider'> {SongList.time} </div> \n                        <div className = \"rowItems\" id = 'iphoneHider'> - </div>\n                        <div className = \"rowItems\" id = 'iphoneHider' > {SongList.mood} </div>    \n                        <div className = \"rowItems\" id = 'iphoneHider' >\n                             Toni \n                        </div>  \n                    </li> \n                    ))}\n                </ul>\n                    <input type = \"range\" className = \"progressBar\" defaultValue = \"0\" ref = {progressBar} onChange = {changeRange} />\n                <footer className = \"bottomPlaybar\"> \n                        <div className = \"playerInfo\">\n                            <img className = \"playerImg\" src = {SongList[currentSongIndex].img_src}/>\n\n\n                        </div>\n                        <div className = \"playerButtons\">\n                            <audio src = {SongList[currentSongIndex].src} ref = {audioPlayer} preload = \"metadata\" >\n                            </audio>\n                             \n                            <button className = \"backwardforward\" onClick = {()=> { backSong(); setIsPlaying(true); }} > \n                            <IoMdSkipBackward/>  \n                            </button>\n                            <button className = \"playPause\" onClick = {togglePlayPause}>\n                            { isPlaying?  <GrPauseFill className = \"pause\" /> : <GrPlayFill className = \"play\" /> }\n                            </button>\n                            <button className = \"backwardforward\" onClick = {()=> { skipSong(); setIsPlaying(true) }}  > \n                            <IoMdSkipForward/>\n                            </button> \n\n                        </div>\n                        <div className = \"playerActions\"></div>\n            </footer>    \n            </div> \n\n            \n        );\n}\n\nexport default Beats;","import React, { useState, useEffect } from 'react';\nimport AudioPlayer from '../Audioplayer'\nimport '../Audioplayer.css';\n\nimport './Songs.css'\n\nexport default function Songs() {    \n\n\n\n    return(\n\n        \n        <div className = \"mainBox\">\n            \n        <div className = 'songssMenu'>\n\n        </div> \n\n\n\n\n\n   \n\n\n\n\n\n\n    </div>\n\n\n        );\n    \n    \n    \n}\n    ","import React, { useState } from 'react';\r\nimport './MainSec.css';  \r\n\r\nfunction MainSec () {\r\n    return (\r\n        <>\r\n            <div className = 'backsplash'>\r\n                    {/* <img \r\n                    className = 'purplebeach'\r\n                    src = 'images/purplebeach.jpg' \r\n                    alt='purplebeach'>\r\n                    </img> */}\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MainSec;\r\n","import React from 'react';\r\nimport './Footer.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n  return (\r\n        <div className = 'Footer' >\r\n             <a href=\"https://www.instagram.com/mike18cincy/\" target=\"_blank\"freeCodeCamp >       \r\n                    <img \r\n                    className = 'insta'\r\n                    src = 'images/insta2.png' \r\n                    alt='insta'>\r\n                    \r\n                    </img>\r\n              </a>\r\n\r\n              {/* <a href=\"https://www.freecodecamp.org/\" target=\"_blank\"freeCodeCamp >\r\n                    <img \r\n                    className = 'twitter'\r\n                    src = 'images/twitter1.png' \r\n                    alt='twitter'>\r\n                    </img>\r\n              </a> */}\r\n\r\n            </div>\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Footer;","import Navbar from './Navbar';\nimport MainSec from './MainSec';\nimport AudioPlayer from './Audioplayer'\nimport Footer from './Footer'\nimport React from 'react'; \n\nfunction LandingPage() {\n\n\n\n    return (\n        <>\n\n        <Navbar />\n        <MainSec />\n        <AudioPlayer />\n        <Footer />\n        </>\n\n    );\n}    \n\nexport default LandingPage;","import React from 'react'; \nimport { BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\nimport About from './pages/About'\nimport Beats from './pages/Beats'\nimport Songs from './pages/Songs'\nimport LandingPage from './LandingPage'\n\n\n\nfunction App() {\n\n  return (\n    <>\n      <Router>\n        {/* <Switch> */}\n        \n          <Route path =\"/\" component = {LandingPage}/>   \n          <Route path ='/about' component = {About}  />\n          <Route path = '/beats' component = {Beats} />\n          <Route path = '/songs' component = {Songs} />\n\n          {/* <Route path='/pricing' component = {Pricing} /> */}   \n            \n\n        {/* </Switch> */}\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}